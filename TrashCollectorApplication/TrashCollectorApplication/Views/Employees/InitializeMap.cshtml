@*@model IEnumerable<float>
    @{
        ViewBag.Title = "View";
    }


    <style>

        #map {
            height: 400px;
            width: 700px;
        }
    </style>
    <br />
    <div class="row">
        <div id="map"></div>
        <script>
            var map;
            function initMap() {
                var myLatLng = { lat: @ViewBag.Lat, lng: @ViewBag.Long }
                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 8,
                    center : myLatLng
                });

                var marker = new google.maps.Marker({
                    position: myLatLng,
                    map: map,
                    //title: 'Hello World!'
                });
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAlfGYqynKO4m6WcJH7Fan-OR0z7s-kR8A&callback=initMap"
                async defer></script>


    </div>*@

@model IEnumerable<TrashCollectorApplication.Models.Client>
@{
    ViewBag.Title = "View";
}


<style>

    #map {
        height: 400px;
        width: 700px;
    }
</style>
<br />
<div class="row">
    <div id="map"></div>
    <script>

        function initMap() {
            
            @*@{ 
                //var locations = ViewBag.LatLongs.ToList();
                var locations = new List<float>();
                var locationCount = new List<int>();
                foreach(var item in ViewBag.LatLongs)
                {
                    locations.Add(item);
                }
                foreach(var item in ViewBag.LatLongCount)
                {
                    locationCount.Add(item);
                }
                var i = 0;
            }*@

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 13,
                center: new google.maps.LatLng(43.4997, -87.8504),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
            })

            var infowindow = new google.maps.InfoWindow({});

            var allLatLongs = @Html.Raw(Json.Encode(ViewBag.LatLongs));
            console.log(allLatLongs);

            var marker, i

            for (i = 0; i < allLatLongs.length; i += 2) {

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(allLatLongs[i], allLatLongs[i+1]),
                    map: map,
                })
                
                google.maps.event.addListener(
                    marker,
                    'click',
                    (function (marker, i) {
                return function () {
                    //infowindow.setContent(locations[i][0])
                    infowindow.open(map, marker)
                        }
            })(marker, i)
                )
            }
        }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=&callback=initMap"
            async defer></script>


</div>